name: React deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: front
  IMAGE: kenshin-front
  ARTIFACT_DOCKER: ${{ secrets.ARTIFACT_DOCKER }}
  REPO: ${{ secrets.ARTIFACT_REPO }}
  
jobs:
  build_and_deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout source code.
        uses: actions/checkout@main
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: gcloud docker auth
        run: |-
          gcloud --quiet auth configure-docker $ARTIFACT_DOCKER

      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

        # Build the Docker image
      - name: Build
        run: |-
            docker build \
            --tag "$REPO/$IMAGE:$GITHUB_SHA" \
            .

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$REPO/$IMAGE:$GITHUB_SHA"

      # Set up kustomize
      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        id: deploy
        run: |-
          ./kustomize edit set image REPO/IMAGE:TAG=$REPO/$IMAGE:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
      # nofify result to discord    
      - name: Set success color
        if: always()
        run: | 
          if [[ ${{ steps.deploy.outcome }} == "success" ]]; then 
            echo "STATUS_COLOR=7667570" >> "$GITHUB_ENV"
          else 
            echo "STATUS_COLOR=16735560" >> "$GITHUB_ENV"
          fi
      - name: Discord notification
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_EMBEDS: '[{"title":"${{github.repository}}","color":${{env.STATUS_COLOR}},"url":"${{github.server_url}}/${{github.repository}}","fields":[{"name":"WorkFlow","value":"${{github.workflow}}"},{"name":"Commit","value":"${{github.sha}}"}]}]'
        uses: Ilshidur/action-discord@master  
